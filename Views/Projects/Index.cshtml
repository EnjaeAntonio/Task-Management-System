@using Microsoft.AspNetCore.Identity;
@using System.ComponentModel;
@using TaskManagementSystem.Areas.Identity.Data;
@using TaskManagementSystem.Models.ViewModels;
@model TaskManagementSystem.Models.ViewModels.ProjectListViewModel
@inject UserManager<ApplicationUser> UserManager;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    bool isManager = await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Project Manager");
}

<h1>Projects</h1>

@if (isManager)
{
    <div class="mb-3">
        <a asp-action="Create" class="btn btn-primary">Create New Project</a>
    </div>
}

<div class="row">
    <div class="col-8">
        @foreach (ApplicationProject item in Model.Projects)
        {
            <div class="card mb-3">
                <div class="card-header">
                    <h3 class="d-inline">@Html.DisplayFor(modelItem => item.Title)</h3>
                    @if (isManager)
                    {
                        <div class="float-end">
                            <a asp-controller="Tasks" asp-action="Create" asp-route-projectId="@item.Id" class="btn btn-success">Create Task</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete Project</a>
                        </div>
                    }
                </div>
                <div class="card-body">
                    <table class="table">
                        @if (item.Tasks.Count > 0)
                        {
                            <thead>
                                <tr>
                                    <th>Title</th>
                                    <th>Required Hours</th>
                                    <th>Priority</th>
                                    <th>Completed</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var task in item.Tasks)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelTask => task.Title)</td>
                                        <td>@Html.DisplayFor(modelTask => task.RequiredHours) Hours</td>
                                        <td>@Html.DisplayFor(modelTask => task.Priority)</td>
                                        <td>@Html.DisplayFor(modelTask => task.Completed)</td>
                                        <td>
                                            <a asp-action="Edit" asp-controller="Tasks" asp-route-id="@task.Id" class="btn btn-sm btn-primary">Edit</a>
                                            <a asp-action="Details" asp-controller="Tasks" asp-route-id="@task.Id" class="btn btn-sm btn-info">Details</a>

                                            @if (isManager)
                                            {
                                                <a asp-action="Assign" asp-controller="Tasks" asp-route-id="@task.Id" class="btn btn-sm btn-info">Assign Task</a>
                                                <a asp-action="Delete" asp-controller="Tasks" asp-route-id="@task.Id" class="btn btn-sm btn-danger">Delete</a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="text-center">No tasks available for this project</td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        }
    </div>
    <div class="col-4">
        <form asp-action="Index" method="get">
            <div class="form-group">
                <label asp-for="OrderBy">Order By</label>
                <select asp-for="OrderBy" class="form-select" asp-items="Html.GetEnumSelectList<TaskOrderBy>()"></select>
            </div>
            <div class="form-group">
                <label asp-for="OrderDirection">Order Direction</label>
                <select asp-for="OrderDirection" class="form-select" asp-items="Html.GetEnumSelectList<ListSortDirection>()"></select>
            </div>
            <div class="form-group">
                <div class="form-check">
                    <input asp-for="ShowCompleted" class="form-check-input">
                    <label asp-for="ShowCompleted" class="form-check-label">Show Completed Tasks</label>
                </div>
            </div>
            @if (isManager)
            {
                <div class="form-group">
                    <div class="form-check">
                        <input asp-for="ShowAssigned" class="form-check-input">
                        <label asp-for="ShowAssigned" class="form-check-label">Show Assigned Tasks</label>
                    </div>
                </div>
            }
            <div class="form-group">
                <input type="submit" class="btn btn-primary" value="Filter" />
            </div>
        </form>
    </div>
</div>